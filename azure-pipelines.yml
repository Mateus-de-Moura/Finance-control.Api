trigger:
- main

pool:
  name: default

variables:
  solution: '**/*.sln'
  buildConfiguration: 'Release'
  outputFolder: '$(Agent.WorkFolder)/_build_output'
  appSettingsFile: 'appsettings.json'
  connectionString: 'Server=MEU_SERVIDOR;Database=MINHA_DB;User Id=USUARIO;Password=SENHA;' 

steps:
- task: UseDotNet@2
  displayName: 'Instalar .NET 9 SDK'
  inputs:
    packageType: 'sdk'
    version: '9.0.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: DotNetCoreCLI@2
  displayName: 'Restaurar pacotes'
  inputs:
    command: 'restore'
    projects: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: 'Compilar API (.NET 9)'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'

# Passo extra: sobrescreve appsettings.Production.json com connection string correta antes do publish
- powershell: |
    $appSettingsPath = "$(Build.SourcesDirectory)/$(appSettingsFile)"
    Write-Host "Atualizando connection string no $appSettingsPath"
    $json = Get-Content $appSettingsPath | ConvertFrom-Json

    # Ajuste o caminho para connection string conforme seu arquivo json
    $json.ConnectionStrings.DefaultConnection = '$(connectionString)'

    $json | ConvertTo-Json -Depth 10 | Set-Content -Path $appSettingsPath -Encoding UTF8
  displayName: 'Atualizar appsettings.Production.json com connection string'

- task: DotNetCoreCLI@2
  displayName: 'Publicar API (.NET 9)'
  inputs:
    command: 'publish'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration) --output $(outputFolder)'

- task: PublishBuildArtifacts@1
  displayName: 'Publicar Artefatos'
  inputs:
    PathtoPublish: '$(outputFolder)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- powershell: |
    $source = "$(outputFolder)"
    $destination = "C:\Users\Mateus\Desktop\Publish"

    if (!(Test-Path -Path $destination)) {
      New-Item -ItemType Directory -Path $destination | Out-Null
    }

    # Copia todo conteúdo do build para pasta de deploy IIS
    Copy-Item -Path "$source\*" -Destination $destination -Recurse -Force

    Write-Host "Publicação concluída com sucesso em: $destination"

    # Opcional: Exemplo para configurar variável de ambiente no IIS (ajuste conforme necessário)
    # $envName = "ConnectionStrings__DefaultConnection"
    # [Environment]::SetEnvironmentVariable($envName, '$(connectionString)', 'Machine')
  displayName: 'Copiar arquivos para C:\Users\Mateus\Desktop\Publish'
